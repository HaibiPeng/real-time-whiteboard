{"ast":null,"code":"const Drawing = socket => {\n  var canvas = document.getElementsByClassName('whiteboard')[0]; //var canvas = document.getElementById('canvas');\n\n  var colors = document.getElementsByClassName('color');\n  var context = canvas.getContext('2d');\n  var undoIcon = document.getElementById('undo');\n  var eraseIcon = document.getElementById('erase');\n  undoIcon.addEventListener('click', function () {\n    onUndo();\n  });\n  eraseIcon.addEventListener('click', function () {\n    current.color = 'white';\n  });\n  var current = {\n    color: 'black'\n  };\n  var drawing = false;\n  const actionHistory = [];\n  let actionPointer = -1;\n\n  function putAction(data) {\n    if (actionHistory.length - 1 > actionPointer) {\n      actionHistory.splice(actionPointer + 1);\n    }\n\n    actionHistory.push(data);\n    actionPointer += 1;\n  }\n\n  ;\n\n  function onUndo() {\n    if (actionPointer < 0) {\n      return;\n    }\n\n    const action = actionHistory[actionPointer];\n    actionPointer -= 1;\n    socket.emit(\"hideLine\", {\n      id: action.id,\n      hidden: true\n    });\n  }\n\n  function redraw(data) {\n    const {\n      lineHist\n    } = data;\n    context.clearRect(0, 0, context.canvas.clientWidth, context.canvas.clientHeight);\n\n    for (const line of lineHist) {\n      //console.log(line.hidden)\n      onDrawingEvent(line);\n    }\n  }\n\n  ;\n  socket.on(\"redraw\", redraw);\n  window.addEventListener(\"keydown\", event => {\n    if ((event.ctrlKey || event.metaKey) && !drawing) {\n      if (event.key === \"z\") {\n        onUndo();\n      }\n\n      ;\n    }\n\n    ;\n  });\n  canvas.addEventListener('mousedown', onMouseDown, false);\n  canvas.addEventListener('mouseup', onMouseUp, false);\n  canvas.addEventListener('mouseout', onMouseUp, false);\n  canvas.addEventListener('mousemove', throttle(onMouseMove, 10), false); //Touch support for mobile devices\n\n  canvas.addEventListener('touchstart', onMouseDown, false);\n  canvas.addEventListener('touchend', onMouseUp, false);\n  canvas.addEventListener('touchcancel', onMouseUp, false);\n  canvas.addEventListener('touchmove', throttle(onMouseMove, 10), false);\n\n  for (var i = 0; i < colors.length; i++) {\n    colors[i].addEventListener('click', onColorUpdate, false);\n  }\n\n  socket.on('drawing', onDrawingEvent);\n  window.addEventListener('resize', onResize, false);\n  onResize();\n\n  function drawLine(x0, y0, x1, y1, color, id, hidden, emit) {\n    if (hidden) return;\n    context.beginPath();\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.strokeStyle = color;\n\n    if (color === 'white') {\n      context.lineWidth = 30;\n    } else {\n      context.lineWidth = 3;\n    }\n\n    context.stroke();\n    context.closePath();\n\n    if (!emit) {\n      return;\n    }\n\n    var w = canvas.width;\n    var h = canvas.height;\n    socket.emit('drawing', {\n      x0: x0 / w,\n      y0: y0 / h,\n      x1: x1 / w,\n      y1: y1 / h,\n      color: color,\n      hidden: hidden,\n      id: id\n    });\n  }\n\n  function onMouseDown(e) {\n    drawing = true;\n    current.x = e.clientX || e.touches[0].clientX;\n    current.y = e.clientY || e.touches[0].clientY;\n    current.id = generateUniqueId();\n  }\n\n  function onMouseUp(e) {\n    if (!drawing) {\n      return;\n    }\n\n    drawing = false;\n    drawLine(current.x, current.y, e.clientX || e.touches[0].clientX, e.clientY || e.touches[0].clientY, current.color, current.id, false, true);\n    putAction({\n      act: 'drawing',\n      id: current.id\n    }); //console.log(current.id);\n  }\n\n  function onMouseMove(e) {\n    if (!drawing) {\n      return;\n    }\n\n    drawLine(current.x, current.y, e.clientX || e.touches[0].clientX, e.clientY || e.touches[0].clientY, current.color, current.id, false, true);\n    current.x = e.clientX || e.touches[0].clientX;\n    current.y = e.clientY || e.touches[0].clientY;\n  }\n\n  function onColorUpdate(e) {\n    current.color = e.target.className.split(' ')[1];\n  } // limit the number of events per second\n\n\n  function throttle(callback, delay) {\n    var previousCall = new Date().getTime();\n    return function () {\n      var time = new Date().getTime();\n\n      if (time - previousCall >= delay) {\n        previousCall = time;\n        callback.apply(null, arguments);\n      }\n    };\n  }\n\n  function onDrawingEvent(data) {\n    var w = canvas.width;\n    var h = canvas.height;\n    drawLine(data.x0 * w, data.y0 * h, data.x1 * w, data.y1 * h, data.color, data.id, data.hidden);\n  } // make the canvas fill its parent\n\n\n  function onResize() {\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n  }\n\n  function generateUniqueId() {\n    const strong = 65535;\n    return new Date().getTime().toString(16) + \"-\" + Math.floor(strong * Math.random()).toString(16) + \"-\" + Math.floor(strong * Math.random()).toString(16) + \"-\" + Math.floor(strong * Math.random()).toString(16);\n  }\n};\n\n_c = Drawing;\nexport default Drawing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Drawing\");","map":{"version":3,"sources":["/Users/jdszsl/Desktop/projects/wb/real-time-whiteboard/client/src/components/whiteboard/drawing/drawing.js"],"names":["Drawing","socket","canvas","document","getElementsByClassName","colors","context","getContext","undoIcon","getElementById","eraseIcon","addEventListener","onUndo","current","color","drawing","actionHistory","actionPointer","putAction","data","length","splice","push","action","emit","id","hidden","redraw","lineHist","clearRect","clientWidth","clientHeight","line","onDrawingEvent","on","window","event","ctrlKey","metaKey","key","onMouseDown","onMouseUp","throttle","onMouseMove","i","onColorUpdate","onResize","drawLine","x0","y0","x1","y1","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","closePath","w","width","h","height","e","x","clientX","touches","y","clientY","generateUniqueId","act","target","className","split","callback","delay","previousCall","Date","getTime","time","apply","arguments","innerWidth","innerHeight","strong","toString","Math","floor","random"],"mappings":"AAAA,MAAMA,OAAO,GAAIC,MAAD,IAAY;AACxB,MAAIC,MAAM,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,YAAhC,EAA8C,CAA9C,CAAb,CADwB,CAExB;;AACA,MAAIC,MAAM,GAAGF,QAAQ,CAACC,sBAAT,CAAgC,OAAhC,CAAb;AACA,MAAIE,OAAO,GAAGJ,MAAM,CAACK,UAAP,CAAkB,IAAlB,CAAd;AACA,MAAIC,QAAQ,GAAGL,QAAQ,CAACM,cAAT,CAAwB,MAAxB,CAAf;AACA,MAAIC,SAAS,GAAGP,QAAQ,CAACM,cAAT,CAAwB,OAAxB,CAAhB;AAEAD,EAAAA,QAAQ,CAACG,gBAAT,CAA0B,OAA1B,EAAmC,YAAW;AAC1CC,IAAAA,MAAM;AACT,GAFD;AAIAF,EAAAA,SAAS,CAACC,gBAAV,CAA2B,OAA3B,EAAoC,YAAY;AAC5CE,IAAAA,OAAO,CAACC,KAAR,GAAgB,OAAhB;AACH,GAFD;AAIA,MAAID,OAAO,GAAG;AACVC,IAAAA,KAAK,EAAE;AADG,GAAd;AAGA,MAAIC,OAAO,GAAG,KAAd;AAEA,QAAMC,aAAa,GAAG,EAAtB;AACA,MAAIC,aAAa,GAAG,CAAC,CAArB;;AAEA,WAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACrB,QAAIH,aAAa,CAACI,MAAd,GAAuB,CAAvB,GAA2BH,aAA/B,EAA8C;AAC1CD,MAAAA,aAAa,CAACK,MAAd,CAAqBJ,aAAa,GAAG,CAArC;AACH;;AACDD,IAAAA,aAAa,CAACM,IAAd,CAAmBH,IAAnB;AACAF,IAAAA,aAAa,IAAI,CAAjB;AACH;;AAAA;;AAED,WAASL,MAAT,GAAkB;AACd,QAAIK,aAAa,GAAG,CAApB,EAAuB;AACnB;AACH;;AACD,UAAMM,MAAM,GAAGP,aAAa,CAACC,aAAD,CAA5B;AACAA,IAAAA,aAAa,IAAI,CAAjB;AACAhB,IAAAA,MAAM,CAACuB,IAAP,CAAY,UAAZ,EAAwB;AAAEC,MAAAA,EAAE,EAAEF,MAAM,CAACE,EAAb;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAAxB;AACH;;AAED,WAASC,MAAT,CAAgBR,IAAhB,EAAsB;AAClB,UAAM;AAAES,MAAAA;AAAF,QAAeT,IAArB;AACAb,IAAAA,OAAO,CAACuB,SAAR,CACI,CADJ,EAEI,CAFJ,EAGIvB,OAAO,CAACJ,MAAR,CAAe4B,WAHnB,EAIIxB,OAAO,CAACJ,MAAR,CAAe6B,YAJnB;;AAMA,SAAK,MAAMC,IAAX,IAAmBJ,QAAnB,EAA6B;AACzB;AACAK,MAAAA,cAAc,CAACD,IAAD,CAAd;AACH;AACJ;;AAAA;AAED/B,EAAAA,MAAM,CAACiC,EAAP,CAAU,QAAV,EAAoBP,MAApB;AAEAQ,EAAAA,MAAM,CAACxB,gBAAP,CAAwB,SAAxB,EAAoCyB,KAAD,IAAW;AAC1C,QAAI,CAACA,KAAK,CAACC,OAAN,IAAiBD,KAAK,CAACE,OAAxB,KAAoC,CAACvB,OAAzC,EAAkD;AAC9C,UAAIqB,KAAK,CAACG,GAAN,KAAc,GAAlB,EAAuB;AACnB3B,QAAAA,MAAM;AACT;;AAAA;AACJ;;AAAA;AACJ,GAND;AAQAV,EAAAA,MAAM,CAACS,gBAAP,CAAwB,WAAxB,EAAqC6B,WAArC,EAAkD,KAAlD;AACAtC,EAAAA,MAAM,CAACS,gBAAP,CAAwB,SAAxB,EAAmC8B,SAAnC,EAA8C,KAA9C;AACAvC,EAAAA,MAAM,CAACS,gBAAP,CAAwB,UAAxB,EAAoC8B,SAApC,EAA+C,KAA/C;AACAvC,EAAAA,MAAM,CAACS,gBAAP,CAAwB,WAAxB,EAAqC+B,QAAQ,CAACC,WAAD,EAAc,EAAd,CAA7C,EAAgE,KAAhE,EApEwB,CAsExB;;AACAzC,EAAAA,MAAM,CAACS,gBAAP,CAAwB,YAAxB,EAAsC6B,WAAtC,EAAmD,KAAnD;AACAtC,EAAAA,MAAM,CAACS,gBAAP,CAAwB,UAAxB,EAAoC8B,SAApC,EAA+C,KAA/C;AACAvC,EAAAA,MAAM,CAACS,gBAAP,CAAwB,aAAxB,EAAuC8B,SAAvC,EAAkD,KAAlD;AACAvC,EAAAA,MAAM,CAACS,gBAAP,CAAwB,WAAxB,EAAqC+B,QAAQ,CAACC,WAAD,EAAc,EAAd,CAA7C,EAAgE,KAAhE;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvC,MAAM,CAACe,MAA3B,EAAmCwB,CAAC,EAApC,EAAwC;AACpCvC,IAAAA,MAAM,CAACuC,CAAD,CAAN,CAAUjC,gBAAV,CAA2B,OAA3B,EAAoCkC,aAApC,EAAmD,KAAnD;AACH;;AAED5C,EAAAA,MAAM,CAACiC,EAAP,CAAU,SAAV,EAAqBD,cAArB;AAEAE,EAAAA,MAAM,CAACxB,gBAAP,CAAwB,QAAxB,EAAkCmC,QAAlC,EAA4C,KAA5C;AACAA,EAAAA,QAAQ;;AAGR,WAASC,QAAT,CAAkBC,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkCrC,KAAlC,EAAyCW,EAAzC,EAA6CC,MAA7C,EAAqDF,IAArD,EAA2D;AACvD,QAAIE,MAAJ,EAAY;AACZpB,IAAAA,OAAO,CAAC8C,SAAR;AACA9C,IAAAA,OAAO,CAAC+C,MAAR,CAAeL,EAAf,EAAmBC,EAAnB;AACA3C,IAAAA,OAAO,CAACgD,MAAR,CAAeJ,EAAf,EAAmBC,EAAnB;AACA7C,IAAAA,OAAO,CAACiD,WAAR,GAAsBzC,KAAtB;;AACA,QAAGA,KAAK,KAAK,OAAb,EAAqB;AACjBR,MAAAA,OAAO,CAACkD,SAAR,GAAoB,EAApB;AACH,KAFD,MAEM;AACFlD,MAAAA,OAAO,CAACkD,SAAR,GAAoB,CAApB;AACH;;AACDlD,IAAAA,OAAO,CAACmD,MAAR;AACAnD,IAAAA,OAAO,CAACoD,SAAR;;AAEA,QAAI,CAAClC,IAAL,EAAW;AAAE;AAAS;;AACtB,QAAImC,CAAC,GAAGzD,MAAM,CAAC0D,KAAf;AACA,QAAIC,CAAC,GAAG3D,MAAM,CAAC4D,MAAf;AAEA7D,IAAAA,MAAM,CAACuB,IAAP,CAAY,SAAZ,EAAuB;AACnBwB,MAAAA,EAAE,EAAEA,EAAE,GAAGW,CADU;AAEnBV,MAAAA,EAAE,EAAEA,EAAE,GAAGY,CAFU;AAGnBX,MAAAA,EAAE,EAAEA,EAAE,GAAGS,CAHU;AAInBR,MAAAA,EAAE,EAAEA,EAAE,GAAGU,CAJU;AAKnB/C,MAAAA,KAAK,EAAEA,KALY;AAMnBY,MAAAA,MAAM,EAAEA,MANW;AAOnBD,MAAAA,EAAE,EAAEA;AAPe,KAAvB;AASH;;AAED,WAASe,WAAT,CAAqBuB,CAArB,EAAwB;AACpBhD,IAAAA,OAAO,GAAG,IAAV;AACAF,IAAAA,OAAO,CAACmD,CAAR,GAAYD,CAAC,CAACE,OAAF,IAAaF,CAAC,CAACG,OAAF,CAAU,CAAV,EAAaD,OAAtC;AACApD,IAAAA,OAAO,CAACsD,CAAR,GAAYJ,CAAC,CAACK,OAAF,IAAaL,CAAC,CAACG,OAAF,CAAU,CAAV,EAAaE,OAAtC;AACAvD,IAAAA,OAAO,CAACY,EAAR,GAAa4C,gBAAgB,EAA7B;AACH;;AAED,WAAS5B,SAAT,CAAmBsB,CAAnB,EAAsB;AAClB,QAAI,CAAChD,OAAL,EAAc;AAAE;AAAS;;AACzBA,IAAAA,OAAO,GAAG,KAAV;AACAgC,IAAAA,QAAQ,CAAClC,OAAO,CAACmD,CAAT,EAAYnD,OAAO,CAACsD,CAApB,EAAuBJ,CAAC,CAACE,OAAF,IAAaF,CAAC,CAACG,OAAF,CAAU,CAAV,EAAaD,OAAjD,EAA0DF,CAAC,CAACK,OAAF,IAAaL,CAAC,CAACG,OAAF,CAAU,CAAV,EAAaE,OAApF,EAA6FvD,OAAO,CAACC,KAArG,EAA4GD,OAAO,CAACY,EAApH,EAAwH,KAAxH,EAA+H,IAA/H,CAAR;AACAP,IAAAA,SAAS,CAAC;AAAEoD,MAAAA,GAAG,EAAE,SAAP;AAAkB7C,MAAAA,EAAE,EAAEZ,OAAO,CAACY;AAA9B,KAAD,CAAT,CAJkB,CAKlB;AACH;;AAED,WAASkB,WAAT,CAAqBoB,CAArB,EAAwB;AACpB,QAAI,CAAChD,OAAL,EAAc;AAAE;AAAS;;AACzBgC,IAAAA,QAAQ,CAAClC,OAAO,CAACmD,CAAT,EAAYnD,OAAO,CAACsD,CAApB,EAAuBJ,CAAC,CAACE,OAAF,IAAaF,CAAC,CAACG,OAAF,CAAU,CAAV,EAAaD,OAAjD,EAA0DF,CAAC,CAACK,OAAF,IAAaL,CAAC,CAACG,OAAF,CAAU,CAAV,EAAaE,OAApF,EAA6FvD,OAAO,CAACC,KAArG,EAA4GD,OAAO,CAACY,EAApH,EAAwH,KAAxH,EAA+H,IAA/H,CAAR;AACAZ,IAAAA,OAAO,CAACmD,CAAR,GAAYD,CAAC,CAACE,OAAF,IAAaF,CAAC,CAACG,OAAF,CAAU,CAAV,EAAaD,OAAtC;AACApD,IAAAA,OAAO,CAACsD,CAAR,GAAYJ,CAAC,CAACK,OAAF,IAAaL,CAAC,CAACG,OAAF,CAAU,CAAV,EAAaE,OAAtC;AACH;;AAED,WAASvB,aAAT,CAAuBkB,CAAvB,EAA0B;AACtBlD,IAAAA,OAAO,CAACC,KAAR,GAAgBiD,CAAC,CAACQ,MAAF,CAASC,SAAT,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAAhB;AACH,GA3IuB,CA6IxB;;;AACA,WAAS/B,QAAT,CAAkBgC,QAAlB,EAA4BC,KAA5B,EAAmC;AAC/B,QAAIC,YAAY,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAnB;AACA,WAAO,YAAY;AACf,UAAIC,IAAI,GAAG,IAAIF,IAAJ,GAAWC,OAAX,EAAX;;AAEA,UAAKC,IAAI,GAAGH,YAAR,IAAyBD,KAA7B,EAAoC;AAChCC,QAAAA,YAAY,GAAGG,IAAf;AACAL,QAAAA,QAAQ,CAACM,KAAT,CAAe,IAAf,EAAqBC,SAArB;AACH;AACJ,KAPD;AAQH;;AAED,WAAShD,cAAT,CAAwBd,IAAxB,EAA8B;AAC1B,QAAIwC,CAAC,GAAGzD,MAAM,CAAC0D,KAAf;AACA,QAAIC,CAAC,GAAG3D,MAAM,CAAC4D,MAAf;AACAf,IAAAA,QAAQ,CAAC5B,IAAI,CAAC6B,EAAL,GAAUW,CAAX,EAAcxC,IAAI,CAAC8B,EAAL,GAAUY,CAAxB,EAA2B1C,IAAI,CAAC+B,EAAL,GAAUS,CAArC,EAAwCxC,IAAI,CAACgC,EAAL,GAAUU,CAAlD,EAAqD1C,IAAI,CAACL,KAA1D,EAAiEK,IAAI,CAACM,EAAtE,EAA0EN,IAAI,CAACO,MAA/E,CAAR;AACH,GA9JuB,CAgKxB;;;AACA,WAASoB,QAAT,GAAoB;AAChB5C,IAAAA,MAAM,CAAC0D,KAAP,GAAezB,MAAM,CAAC+C,UAAtB;AACAhF,IAAAA,MAAM,CAAC4D,MAAP,GAAgB3B,MAAM,CAACgD,WAAvB;AACH;;AAED,WAASd,gBAAT,GAA4B;AACxB,UAAMe,MAAM,GAAG,KAAf;AACA,WACI,IAAIP,IAAJ,GAAWC,OAAX,GAAqBO,QAArB,CAA8B,EAA9B,IACA,GADA,GAEAC,IAAI,CAACC,KAAL,CAAWH,MAAM,GAAGE,IAAI,CAACE,MAAL,EAApB,EAAmCH,QAAnC,CAA4C,EAA5C,CAFA,GAGA,GAHA,GAIAC,IAAI,CAACC,KAAL,CAAWH,MAAM,GAAGE,IAAI,CAACE,MAAL,EAApB,EAAmCH,QAAnC,CAA4C,EAA5C,CAJA,GAKA,GALA,GAMAC,IAAI,CAACC,KAAL,CAAWH,MAAM,GAAGE,IAAI,CAACE,MAAL,EAApB,EAAmCH,QAAnC,CAA4C,EAA5C,CAPJ;AASH;AAEJ,CAnLD;;KAAMrF,O;AAqLN,eAAeA,OAAf","sourcesContent":["const Drawing = (socket) => {\n    var canvas = document.getElementsByClassName('whiteboard')[0];\n    //var canvas = document.getElementById('canvas');\n    var colors = document.getElementsByClassName('color');\n    var context = canvas.getContext('2d');\n    var undoIcon = document.getElementById('undo');\n    var eraseIcon = document.getElementById('erase');\n\n    undoIcon.addEventListener('click', function() {\n        onUndo();\n    })\n\n    eraseIcon.addEventListener('click', function () {\n        current.color = 'white';\n    })\n\n    var current = {\n        color: 'black'\n    };\n    var drawing = false;\n\n    const actionHistory = [];\n    let actionPointer = -1;\n\n    function putAction(data) {\n        if (actionHistory.length - 1 > actionPointer) {\n            actionHistory.splice(actionPointer + 1);\n        }\n        actionHistory.push(data);\n        actionPointer += 1;\n    };\n\n    function onUndo() {\n        if (actionPointer < 0) {\n            return;\n        }\n        const action = actionHistory[actionPointer];\n        actionPointer -= 1;\n        socket.emit(\"hideLine\", { id: action.id, hidden: true });\n    }\n\n    function redraw(data) {\n        const { lineHist } = data;\n        context.clearRect(\n            0,\n            0,\n            context.canvas.clientWidth,\n            context.canvas.clientHeight\n        );\n        for (const line of lineHist) {\n            //console.log(line.hidden)\n            onDrawingEvent(line);\n        }\n    };\n\n    socket.on(\"redraw\", redraw);\n\n    window.addEventListener(\"keydown\", (event) => {\n        if ((event.ctrlKey || event.metaKey) && !drawing) {\n            if (event.key === \"z\") {\n                onUndo();\n            };\n        };\n    });\n\n    canvas.addEventListener('mousedown', onMouseDown, false);\n    canvas.addEventListener('mouseup', onMouseUp, false);\n    canvas.addEventListener('mouseout', onMouseUp, false);\n    canvas.addEventListener('mousemove', throttle(onMouseMove, 10), false);\n\n    //Touch support for mobile devices\n    canvas.addEventListener('touchstart', onMouseDown, false);\n    canvas.addEventListener('touchend', onMouseUp, false);\n    canvas.addEventListener('touchcancel', onMouseUp, false);\n    canvas.addEventListener('touchmove', throttle(onMouseMove, 10), false);\n\n    for (var i = 0; i < colors.length; i++) {\n        colors[i].addEventListener('click', onColorUpdate, false);\n    }\n\n    socket.on('drawing', onDrawingEvent);\n\n    window.addEventListener('resize', onResize, false);\n    onResize();\n\n\n    function drawLine(x0, y0, x1, y1, color, id, hidden, emit) {\n        if (hidden) return;\n        context.beginPath();\n        context.moveTo(x0, y0);\n        context.lineTo(x1, y1);\n        context.strokeStyle = color;\n        if(color === 'white'){\n            context.lineWidth = 30;\n        } else{\n            context.lineWidth = 3;\n        }\n        context.stroke();\n        context.closePath();\n\n        if (!emit) { return; }\n        var w = canvas.width;\n        var h = canvas.height;\n\n        socket.emit('drawing', {\n            x0: x0 / w,\n            y0: y0 / h,\n            x1: x1 / w,\n            y1: y1 / h,\n            color: color,\n            hidden: hidden,\n            id: id\n        });\n    }\n\n    function onMouseDown(e) {\n        drawing = true;\n        current.x = e.clientX || e.touches[0].clientX;\n        current.y = e.clientY || e.touches[0].clientY;\n        current.id = generateUniqueId();\n    }\n\n    function onMouseUp(e) {\n        if (!drawing) { return; }\n        drawing = false;\n        drawLine(current.x, current.y, e.clientX || e.touches[0].clientX, e.clientY || e.touches[0].clientY, current.color, current.id, false, true);\n        putAction({ act: 'drawing', id: current.id });\n        //console.log(current.id);\n    }\n\n    function onMouseMove(e) {\n        if (!drawing) { return; }\n        drawLine(current.x, current.y, e.clientX || e.touches[0].clientX, e.clientY || e.touches[0].clientY, current.color, current.id, false, true);\n        current.x = e.clientX || e.touches[0].clientX;\n        current.y = e.clientY || e.touches[0].clientY;\n    }\n\n    function onColorUpdate(e) {\n        current.color = e.target.className.split(' ')[1];\n    }\n\n    // limit the number of events per second\n    function throttle(callback, delay) {\n        var previousCall = new Date().getTime();\n        return function () {\n            var time = new Date().getTime();\n\n            if ((time - previousCall) >= delay) {\n                previousCall = time;\n                callback.apply(null, arguments);\n            }\n        };\n    }\n\n    function onDrawingEvent(data) {\n        var w = canvas.width;\n        var h = canvas.height;\n        drawLine(data.x0 * w, data.y0 * h, data.x1 * w, data.y1 * h, data.color, data.id, data.hidden);\n    }\n\n    // make the canvas fill its parent\n    function onResize() {\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n    }\n\n    function generateUniqueId() {\n        const strong = 65535;\n        return (\n            new Date().getTime().toString(16) +\n            \"-\" +\n            Math.floor(strong * Math.random()).toString(16) +\n            \"-\" +\n            Math.floor(strong * Math.random()).toString(16) +\n            \"-\" +\n            Math.floor(strong * Math.random()).toString(16)\n        );\n    }\n\n};\n\nexport default Drawing;\n"]},"metadata":{},"sourceType":"module"}