{"ast":null,"code":"const Drawing = socket => {\n  var canvas = document.getElementsByClassName('whiteboard')[0]; //var canvas = document.getElementById('canvas');\n\n  console.log(canvas);\n  var colors = document.getElementsByClassName('color');\n  var context = canvas.getContext('2d');\n  var current = {\n    color: 'black'\n  };\n  var drawing = false;\n  canvas.addEventListener('mousedown', onMouseDown, false);\n  canvas.addEventListener('mouseup', onMouseUp, false);\n  canvas.addEventListener('mouseout', onMouseUp, false);\n  canvas.addEventListener('mousemove', throttle(onMouseMove, 10), false); //Touch support for mobile devices\n\n  canvas.addEventListener('touchstart', onMouseDown, false);\n  canvas.addEventListener('touchend', onMouseUp, false);\n  canvas.addEventListener('touchcancel', onMouseUp, false);\n  canvas.addEventListener('touchmove', throttle(onMouseMove, 10), false);\n\n  for (var i = 0; i < colors.length; i++) {\n    colors[i].addEventListener('click', onColorUpdate, false);\n  }\n\n  socket.on('drawing', onDrawingEvent);\n  window.addEventListener('resize', onResize, false);\n  onResize();\n\n  function drawLine(x0, y0, x1, y1, color, emit) {\n    context.beginPath();\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.strokeStyle = color;\n\n    if (color === 'white') {\n      context.lineWidth = 20;\n    } else {\n      context.lineWidth = 3;\n    }\n\n    context.stroke();\n    context.closePath();\n\n    if (!emit) {\n      return;\n    }\n\n    var w = canvas.width;\n    var h = canvas.height;\n    socket.emit('drawing', {\n      x0: x0 / w,\n      y0: y0 / h,\n      x1: x1 / w,\n      y1: y1 / h,\n      color: color\n    });\n  }\n\n  function onMouseDown(e) {\n    drawing = true;\n    current.x = e.clientX || e.touches[0].clientX;\n    current.y = e.clientY || e.touches[0].clientY;\n  }\n\n  function onMouseUp(e) {\n    if (!drawing) {\n      return;\n    }\n\n    drawing = false;\n    drawLine(current.x, current.y, e.clientX || e.touches[0].clientX, e.clientY || e.touches[0].clientY, current.color, true);\n  }\n\n  function onMouseMove(e) {\n    if (!drawing) {\n      return;\n    }\n\n    drawLine(current.x, current.y, e.clientX || e.touches[0].clientX, e.clientY || e.touches[0].clientY, current.color, true);\n    current.x = e.clientX || e.touches[0].clientX;\n    current.y = e.clientY || e.touches[0].clientY;\n  }\n\n  function onColorUpdate(e) {\n    current.color = e.target.className.split(' ')[1];\n  } // limit the number of events per second\n\n\n  function throttle(callback, delay) {\n    var previousCall = new Date().getTime();\n    return function () {\n      var time = new Date().getTime();\n\n      if (time - previousCall >= delay) {\n        previousCall = time;\n        callback.apply(null, arguments);\n      }\n    };\n  }\n\n  function onDrawingEvent(data) {\n    var w = canvas.width;\n    var h = canvas.height;\n    drawLine(data.x0 * w, data.y0 * h, data.x1 * w, data.y1 * h, data.color);\n  } // make the canvas fill its parent\n\n\n  function onResize() {\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n  }\n};\n\n_c = Drawing;\nexport default Drawing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Drawing\");","map":{"version":3,"sources":["/Users/jdszsl/Desktop/projects/wb/real-time-whiteboard/client/src/components/whiteboard/drawing/drawing.js"],"names":["Drawing","socket","canvas","document","getElementsByClassName","console","log","colors","context","getContext","current","color","drawing","addEventListener","onMouseDown","onMouseUp","throttle","onMouseMove","i","length","onColorUpdate","on","onDrawingEvent","window","onResize","drawLine","x0","y0","x1","y1","emit","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","closePath","w","width","h","height","e","x","clientX","touches","y","clientY","target","className","split","callback","delay","previousCall","Date","getTime","time","apply","arguments","data","innerWidth","innerHeight"],"mappings":"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","sourcesContent":["const Drawing = (socket) => {\n    var canvas = document.getElementsByClassName('whiteboard')[0];\n    //var canvas = document.getElementById('canvas');\n    console.log(canvas)\n    var colors = document.getElementsByClassName('color');\n    var context = canvas.getContext('2d');\n\n    var current = {\n        color: 'black'\n    };\n    var drawing = false;\n\n    canvas.addEventListener('mousedown', onMouseDown, false);\n    canvas.addEventListener('mouseup', onMouseUp, false);\n    canvas.addEventListener('mouseout', onMouseUp, false);\n    canvas.addEventListener('mousemove', throttle(onMouseMove, 10), false);\n\n    //Touch support for mobile devices\n    canvas.addEventListener('touchstart', onMouseDown, false);\n    canvas.addEventListener('touchend', onMouseUp, false);\n    canvas.addEventListener('touchcancel', onMouseUp, false);\n    canvas.addEventListener('touchmove', throttle(onMouseMove, 10), false);\n\n    for (var i = 0; i < colors.length; i++) {\n        colors[i].addEventListener('click', onColorUpdate, false);\n    }\n\n    socket.on('drawing', onDrawingEvent);\n\n    window.addEventListener('resize', onResize, false);\n    onResize();\n\n\n    function drawLine(x0, y0, x1, y1, color, emit) {\n        context.beginPath();\n        context.moveTo(x0, y0);\n        context.lineTo(x1, y1);\n        context.strokeStyle = color;\n        if(color === 'white'){\n            context.lineWidth = 20;\n        } else{\n            context.lineWidth = 3;\n        }\n        context.stroke();\n        context.closePath();\n\n        if (!emit) { return; }\n        var w = canvas.width;\n        var h = canvas.height;\n\n        socket.emit('drawing', {\n            x0: x0 / w,\n            y0: y0 / h,\n            x1: x1 / w,\n            y1: y1 / h,\n            color: color\n        });\n    }\n\n    function onMouseDown(e) {\n        drawing = true;\n        current.x = e.clientX || e.touches[0].clientX;\n        current.y = e.clientY || e.touches[0].clientY;\n    }\n\n    function onMouseUp(e) {\n        if (!drawing) { return; }\n        drawing = false;\n        drawLine(current.x, current.y, e.clientX || e.touches[0].clientX, e.clientY || e.touches[0].clientY, current.color, true);\n    }\n\n    function onMouseMove(e) {\n        if (!drawing) { return; }\n        drawLine(current.x, current.y, e.clientX || e.touches[0].clientX, e.clientY || e.touches[0].clientY, current.color, true);\n        current.x = e.clientX || e.touches[0].clientX;\n        current.y = e.clientY || e.touches[0].clientY;\n    }\n\n    function onColorUpdate(e) {\n        current.color = e.target.className.split(' ')[1];\n    }\n\n    // limit the number of events per second\n    function throttle(callback, delay) {\n        var previousCall = new Date().getTime();\n        return function () {\n            var time = new Date().getTime();\n\n            if ((time - previousCall) >= delay) {\n                previousCall = time;\n                callback.apply(null, arguments);\n            }\n        };\n    }\n\n    function onDrawingEvent(data) {\n        var w = canvas.width;\n        var h = canvas.height;\n        drawLine(data.x0 * w, data.y0 * h, data.x1 * w, data.y1 * h, data.color);\n    }\n\n    // make the canvas fill its parent\n    function onResize() {\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n    }\n\n};\n\nexport default Drawing;\n"]},"metadata":{},"sourceType":"module"}